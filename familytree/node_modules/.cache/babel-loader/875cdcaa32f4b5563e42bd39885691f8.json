{"ast":null,"code":"var _jsxFileName = \"C:\\\\Personal\\\\ft\\\\familytree\\\\UI\\\\familytree\\\\src\\\\components\\\\Address.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faAddressCard } from '@fortawesome/free-solid-svg-icons';\n\nclass Address extends Component {\n  constructor(props) {\n    super(props);\n\n    this.myChangeHandler = event => {\n      let name = event.target.name;\n      let value = event.target.value;\n      this.setState({\n        [name]: value\n      });\n      this.state.address[name] = value;\n    };\n\n    this.update = () => {\n      const address = this.state.address;\n      const memberId = this.state.memberId;\n\n      if (address.id) {\n        console.log(\"updating address\");\n        axios.put(\"\".concat(this.state.backendUrl, \"member/\").concat(memberId, \"/address/\").concat(address.id), address).then(res => {\n          this.props.history.push(\"/familytree/members/\".concat(memberId));\n        }).catch(error => {\n          console.log(error);\n        });\n      } else {\n        console.log(\"creating address\");\n        axios.post(\"\".concat(this.state.backendUrl, \"member/\").concat(memberId, \"/address\"), address).then(res => {\n          this.props.history.push(\"/familytree/members/\".concat(memberId));\n        }).catch(error => {\n          console.log(error);\n        });\n      }\n    };\n\n    this.state = {\n      address: this.props.address,\n      editMode: 'Y',\n      memberId: this.props.memberId,\n      backendUrl: \"http://localhost:8093/familytree/\"\n    };\n  }\n\n  render() {\n    const address = this.state.address;\n    const editMode = this.state.editMode;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      icon: faAddressCard,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    })), editMode == 'N' ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, address.id ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"button\",\n      value: \"EDIT\",\n      onClick: () => this.setState({\n        editMode: 'Y'\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), address.line1 ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Line 1 : \"), address.line1) : '', address.line2 ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Line 2 : \"), address.line2) : '', React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, address.city ? React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"City : \"), address.city) : '', address.taluka ? React.createElement(\"span\", {\n      style: {\n        padding: 1 + 'em'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Taluka : \"), address.taluka) : ''), address.district ? React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"District : \"), address.district) : '', address.state ? React.createElement(\"span\", {\n      style: {\n        padding: 1 + 'em'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"State : \"), address.state) : '') : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Not Available\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"button\",\n      value: \"ADD\",\n      onClick: () => this.setState({\n        editMode: 'Y'\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }))) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"line1\",\n      value: this.state.address.line1,\n      onChange: this.myChangeHandler,\n      placeholder: \"Line 1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"line2\",\n      value: this.state.address.line2,\n      onChange: this.myChangeHandler,\n      placeholder: \"Line 2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"city\",\n      value: this.state.address.city,\n      onChange: this.myChangeHandler,\n      placeholder: \"City\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"taluka\",\n      value: this.state.address.taluka,\n      onChange: this.myChangeHandler,\n      placeholder: \"Taluka\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"district\",\n      value: this.state.address.district,\n      onChange: this.myChangeHandler,\n      placeholder: \"District\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"state\",\n      value: this.state.address.state,\n      onChange: this.myChangeHandler,\n      placeholder: \"State\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"button\",\n      value: \"UPDATE\",\n      onClick: this.update,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Address;","map":{"version":3,"sources":["C:\\Personal\\ft\\familytree\\UI\\familytree\\src\\components\\Address.js"],"names":["React","Component","axios","FontAwesomeIcon","faAddressCard","Address","constructor","props","myChangeHandler","event","name","target","value","setState","state","address","update","memberId","id","console","log","put","backendUrl","then","res","history","push","catch","error","post","editMode","render","line1","line2","city","taluka","padding","district"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faAddressCard } from '@fortawesome/free-solid-svg-icons'\r\n\r\nclass Address extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             address : this.props.address,\r\n             editMode : 'Y',\r\n             memberId : this.props.memberId,\r\n             backendUrl : \"http://localhost:8093/familytree/\"\r\n        }\r\n    }\r\n\r\n    myChangeHandler = (event) => {\r\n        let name = event.target.name;\r\n        let value = event.target.value;\r\n        this.setState({\r\n            [name]: value,\r\n        });\r\n        this.state.address[name] = value;\r\n    }\r\n    \r\n    update = () => {\r\n        const { address } = this.state;\r\n        const { memberId } = this.state;\r\n        if(address.id){\r\n            console.log(\"updating address\");\r\n            axios.put(`${this.state.backendUrl}member/${memberId}/address/${address.id}`,  address )\r\n            .then(res => {\r\n                this.props.history.push(`/familytree/members/${memberId}`);\r\n            }).catch(error =>{\r\n                console.log(error);\r\n            });\r\n        }else{\r\n            console.log(\"creating address\");\r\n            axios.post(`${this.state.backendUrl}member/${memberId}/address`,  address )\r\n            .then(res => {\r\n                this.props.history.push(`/familytree/members/${memberId}`);\r\n            }).catch(error =>{\r\n                console.log(error);\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { address } = this.state;\r\n        const { editMode } = this.state;\r\n        return (\r\n                <div>\r\n                    <i><FontAwesomeIcon icon={faAddressCard} /></i> \r\n                    {editMode == 'N' ?\r\n                        <div>\r\n                            {address.id ? \r\n                                <div>\r\n                                    <input type=\"button\" value=\"EDIT\" onClick={() => this.setState({editMode : 'Y'})}/>\r\n                                    {address.line1 ? \r\n                                        <div><label>Line 1 : </label>{ address.line1 }</div> \r\n                                    : ''}\r\n                                    {address.line2 ? \r\n                                        <div><label>Line 2 : </label>{ address.line2 }</div> \r\n                                    : ''}\r\n                                    <div>\r\n                                    {address.city ? \r\n                                        <span><label>City : </label>{ address.city }</span> \r\n                                    : ''}\r\n                                    {address.taluka ? \r\n                                        <span style={{padding: 1 + 'em'}}><label>Taluka : </label>{ address.taluka }</span> \r\n                                    : ''}\r\n                                    </div>\r\n                                    {address.district ? \r\n                                        <span><label>District : </label>{ address.district }</span> \r\n                                    : ''}\r\n                                    {address.state ? \r\n                                        <span style={{padding: 1 + 'em'}}><label>State : </label>{ address.state }</span> \r\n                                    : ''}\r\n                                </div>\r\n                                :\r\n                                <div> \r\n                                    Not Available \r\n                                    <br /> \r\n                                    <input type=\"button\" value=\"ADD\" onClick={() => this.setState({editMode : 'Y'})}/>\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                    :\r\n                        <div>\r\n                            <input type=\"text\" name=\"line1\" value={this.state.address.line1} onChange={this.myChangeHandler}  placeholder='Line 1'/>\r\n                            <input type=\"text\" name=\"line2\" value={this.state.address.line2} onChange={this.myChangeHandler}  placeholder='Line 2'/>\r\n                            <br/>\r\n                            <input type=\"text\" name=\"city\" value={this.state.address.city} onChange={this.myChangeHandler}  placeholder='City'/>\r\n                            <input type=\"text\" name=\"taluka\" value={this.state.address.taluka} onChange={this.myChangeHandler}  placeholder='Taluka'/>\r\n                            <br />\r\n                            <input type=\"text\" name=\"district\" value={this.state.address.district} onChange={this.myChangeHandler}  placeholder='District'/>\r\n                            <input type=\"text\" name=\"state\" value={this.state.address.state} onChange={this.myChangeHandler}  placeholder='State'/>\r\n                            <br />\r\n                            <input type=\"button\" value=\"UPDATE\" onClick={this.update}/>\r\n                        </div>\r\n                    }\r\n                </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Address\r\n"]},"metadata":{},"sourceType":"module"}