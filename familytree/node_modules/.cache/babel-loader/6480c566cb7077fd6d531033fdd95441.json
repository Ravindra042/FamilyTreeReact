{"ast":null,"code":"var _jsxFileName = \"C:\\\\Personal\\\\ft\\\\familytree\\\\UI\\\\familytree\\\\src\\\\components\\\\Admin.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios'; // import { withRouter } from 'react-router-dom';\n//import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n//import { faAddressCard, faEdit, faPlus, faCopy } from '@fortawesome/free-solid-svg-icons'\n\nclass Admin extends Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchMembers = () => {\n      axios.get(\"http://localhost:8093/familytree/member\").then(response => {\n        console.log(response.data);\n        this.setState({\n          members: response.data\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    this.fetchAddress = () => {\n      axios.get(\"http://localhost:8093/familytree/member/\".concat(this.state.fromMember.id, \"/address\")).then(response => {\n        console.log(response.data);\n\n        if (null != response.data && \"\" !== response.data) {\n          this.setState({\n            fromMemberAddress: response.data\n          });\n        }\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    this.fromMemberChangeHandler = event => {\n      if (\"NA\" === event.target.value) {\n        this.setState({\n          fromMember: {},\n          fromMemberAddress: {},\n          toMember: {},\n          toMembers: []\n        });\n      } else {\n        this.setState({\n          fromMember: this.state.members[event.target.value],\n          fromMemberAddress: {},\n          toMember: {},\n          toMembers: []\n        }, () => {\n          this.fetchAddress();\n        });\n      }\n    };\n\n    this.toMemberChangeHandler = event => {\n      if (\"NA\" === event.target.value) {\n        this.setState({\n          toMember: {}\n        });\n      } else {\n        this.setState({\n          toMember: this.state.members[event.target.value]\n        });\n      }\n    };\n\n    this.pushToMembers = () => {\n      if (this.state.toMembers === undefined) {\n        return;\n      }\n\n      let toMembers = new Set(this.state.toMembers);\n      toMembers.add(this.state.toMember);\n      this.setState(prevState => ({\n        toMembers: Array.from(toMembers)\n      }));\n    };\n\n    this.state = {\n      members: [],\n      fromMember: {},\n      fromMemberAddress: {},\n      toMember: {},\n      toMembers: []\n    };\n  }\n\n  componentDidMount() {\n    this.fetchMembers();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"page-style\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Welcome Ravi..\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      style: {\n        padding: 1 + 'em'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"From Member\"), React.createElement(\"select\", {\n      style: {\n        width: 28 + 'em'\n      },\n      className: \"form-entity\",\n      name: \"fromMember\",\n      onChange: this.fromMemberChangeHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"NA\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Not Defined\"), this.state.members.map((member, index) => React.createElement(\"option\", {\n      key: index,\n      value: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, member.firstName, \" \", member.lastName)))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, this.state.fromMemberAddress.id ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, this.state.fromMemberAddress.line1 ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Line 1 : \"), this.state.fromMemberAddress.line1) : '', this.state.fromMemberAddress.line2 ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"Line 2 : \"), this.state.fromMemberAddress.line2) : '', React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, this.state.fromMemberAddress.city ? React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"City : \"), this.state.fromMemberAddress.city) : '', this.state.fromMemberAddress.taluka ? React.createElement(\"span\", {\n      style: {\n        padding: 1 + 'em'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"Taluka : \"), this.state.fromMemberAddress.taluka) : ''), this.state.fromMemberAddress.district ? React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"District : \"), this.state.fromMemberAddress.district) : '', this.state.fromMemberAddress.state ? React.createElement(\"span\", {\n      style: {\n        padding: 1 + 'em'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"State : \"), this.state.fromMemberAddress.state) : ''), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"Select Members to copy this address\", React.createElement(\"select\", {\n      style: {\n        width: 28 + 'em'\n      },\n      className: \"form-entity\",\n      name: \"toMember\",\n      onChange: this.toMemberChangeHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"NA\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \"Not Defined\"), this.state.members.map((member, index) => React.createElement(\"option\", {\n      key: index,\n      value: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, member.firstName, \" \", member.lastName))), React.createElement(\"input\", {\n      style: {\n        width: 10 + 'rem'\n      },\n      type: \"button\",\n      value: \"ADD\",\n      onClick: this.pushToMembers,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, this.state.toMembers.map(member => React.createElement(\"div\", {\n      key: member.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, member.firstName, \" \", member.lastName)))) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, this.state.fromMember.id ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, \"Address of \", React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, this.state.fromMember.firstName)), \" is not defined, Please select different member\") : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, \"Please select member\")))));\n  }\n\n}\n\nexport default Admin;","map":{"version":3,"sources":["C:\\Personal\\ft\\familytree\\UI\\familytree\\src\\components\\Admin.js"],"names":["React","Component","axios","Admin","constructor","props","fetchMembers","get","then","response","console","log","data","setState","members","catch","error","fetchAddress","state","fromMember","id","fromMemberAddress","fromMemberChangeHandler","event","target","value","toMember","toMembers","toMemberChangeHandler","pushToMembers","undefined","Set","add","prevState","Array","from","componentDidMount","render","padding","width","map","member","index","firstName","lastName","line1","line2","city","taluka","district"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n// import { withRouter } from 'react-router-dom';\r\n//import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n//import { faAddressCard, faEdit, faPlus, faCopy } from '@fortawesome/free-solid-svg-icons'\r\n\r\nclass Admin extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            members : [],\r\n            fromMember : {},\r\n            fromMemberAddress : {},\r\n            toMember :{},\r\n            toMembers :[]\r\n        }\r\n    }\r\n\r\n    fetchMembers = () => {\r\n        axios.get(`http://localhost:8093/familytree/member`)\r\n          .then(response => {\r\n            console.log(response.data);\r\n            this.setState({members:response.data})\r\n          }).catch(error =>{\r\n              console.log(error);\r\n          });\r\n      }\r\n\r\n      fetchAddress = () => {\r\n        axios.get(`http://localhost:8093/familytree/member/${this.state.fromMember.id}/address`)\r\n          .then(response => {\r\n            console.log(response.data);\r\n            if(null != response.data && \"\"!== response.data){\r\n                this.setState({fromMemberAddress:response.data})\r\n            }\r\n          }).catch(error =>{\r\n              console.log(error);\r\n          });\r\n    }\r\n\r\n      componentDidMount() {\r\n        this.fetchMembers();\r\n      };\r\n\r\n      fromMemberChangeHandler = (event) => {\r\n        if(\"NA\" === event.target.value){\r\n            this.setState({\r\n                fromMember : {},\r\n                fromMemberAddress : {},\r\n                toMember:{},\r\n                toMembers:[] \r\n            });\r\n        }else{\r\n            this.setState({\r\n                fromMember : this.state.members[event.target.value],\r\n                fromMemberAddress : {},\r\n                toMember:{},\r\n                toMembers:[]\r\n            }, () => {this.fetchAddress()});\r\n        }\r\n    }\r\n\r\n    toMemberChangeHandler = (event) => {\r\n        if(\"NA\" === event.target.value){\r\n            this.setState({\r\n                toMember : {}\r\n            });\r\n        }else{\r\n            this.setState({\r\n                toMember : this.state.members[event.target.value]\r\n            });\r\n        }\r\n    }\r\n\r\n    pushToMembers = () => {\r\n        if (this.state.toMembers === undefined) {\r\n            return\r\n          }\r\n          let toMembers = new Set(this.state.toMembers)\r\n          toMembers.add(this.state.toMember)\r\n        this.setState(prevState => ({\r\n            toMembers: Array.from(toMembers)\r\n          }))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"page-style\">\r\n                <h3>Welcome Ravi..</h3>\r\n                <div>\r\n                    <div>\r\n                        <label style={{padding: 1 + 'em'}}>From Member</label>\r\n                        <select style={{width: 28 + 'em'}} className=\"form-entity\" name=\"fromMember\" \r\n                                onChange={this.fromMemberChangeHandler}>\r\n                            <option  value='NA'>Not Defined</option>\r\n                            {this.state.members.map((member, index) => (\r\n                                <option key={index} value={index}>{member.firstName} {member.lastName}</option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n                    <div>\r\n                        {this.state.fromMemberAddress.id ? \r\n                                <div>\r\n                                    <div>\r\n                                        {this.state.fromMemberAddress.line1 ? \r\n                                            <div><label>Line 1 : </label>{ this.state.fromMemberAddress.line1 }</div> \r\n                                        : ''}\r\n                                        {this.state.fromMemberAddress.line2 ? \r\n                                            <div><label>Line 2 : </label>{ this.state.fromMemberAddress.line2 }</div> \r\n                                        : ''}\r\n                                        <div>\r\n                                        {this.state.fromMemberAddress.city ? \r\n                                            <span><label>City : </label>{ this.state.fromMemberAddress.city }</span> \r\n                                        : ''}\r\n                                        {this.state.fromMemberAddress.taluka ? \r\n                                            <span style={{padding: 1 + 'em'}}><label>Taluka : </label>{ this.state.fromMemberAddress.taluka }</span> \r\n                                        : ''}\r\n                                        </div>\r\n                                        {this.state.fromMemberAddress.district ? \r\n                                            <span><label>District : </label>{ this.state.fromMemberAddress.district }</span> \r\n                                        : ''}\r\n                                        {this.state.fromMemberAddress.state ? \r\n                                            <span style={{padding: 1 + 'em'}}><label>State : </label>{ this.state.fromMemberAddress.state }</span> \r\n                                        : ''}\r\n                                    </div>\r\n                                    <div>\r\n                                        Select Members to copy this address\r\n                                        <select style={{width: 28 + 'em'}} className=\"form-entity\" name=\"toMember\" \r\n                                                onChange={this.toMemberChangeHandler}>\r\n                                            <option  value='NA'>Not Defined</option>\r\n                                            {this.state.members.map((member, index) => (\r\n                                                <option key={index} value={index}>{member.firstName} {member.lastName}</option>\r\n                                            ))}\r\n                                        </select>\r\n                                        <input style={{width : 10 + 'rem'}} type=\"button\" value=\"ADD\" onClick={this.pushToMembers}></input>\r\n                                    </div>\r\n                                    <div>\r\n                                    {\r\n                                        this.state.toMembers.map(member => (\r\n                                            <div key = {member.id}>{member.firstName} {member.lastName}</div>\r\n                                        ))\r\n                                    }\r\n                                    </div>\r\n                                </div>\r\n                                :\r\n                                <div> \r\n                                    {this.state.fromMember.id ? \r\n                                    <div>Address of <b><i>{this.state.fromMember.firstName}</i></b> is not defined, Please select different member</div> \r\n                                    : \r\n                                    <div>Please select member</div>\r\n                                    }\r\n                                </div>\r\n                            }\r\n                    </div>\r\n                    \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Admin\r\n"]},"metadata":{},"sourceType":"module"}